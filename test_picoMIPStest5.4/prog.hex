// sample picoMIPS program 2 
// n = 8 bits, Isize = 16+n = 24 bits
// format: 6b opcode, 5b %d, 5b %s, 8b immediate or address
// 
// HEX /////////// BINARY  ///////////////////// ASSEMBLER /////////          
3000      //15'b011_00_00_00000000 MULI %0,%0,0; %0 = %0 * 0// clear %0
4001      //15'b100_00_00_00000001 HOLD 0 PC = 1
0000      //15'b000_00_00_00000000 INPUT %0; Store x1 to %0 register 
4083      //15'b100_00_00_10000011 HOLD 1 PC = 3
4004      //15'b100_00_00_00000100 HOLD 0 PC = 4
0400      //15'b000_01_00_00000000 INPUT %1; Store y1 to %1 register
4086      //15'b100_00_00_10000110 HOLD 1 PC = 6 
3860      //15'b011_10_00_01100000 MULI %2,%0,0.75; %2 = %0 * 0.75// 0.75x1
3D40      //15'b011_11_01_01000000 MULI %3,%1,0.5; %3 = %1 * 0.5// 0.5y1
1B00      //15'b001_10_11_00000000 ADD  %2,%3; %2 = %2 + %3// 0.75x1 +0.5y1
2814      //15'b010_10_00_00010100 ADDI %2,20; %2 = %2 + 20// 0.75x1 +0.5y1 + 20 = x2 display
400B      //15'b100_00_00_00001011 HOLD 0 PC = 11
38C0      //15'b011_10_00_11000000 MULI %2,%0,-0.5; %2 = %0 * -0.5// -0.5x1
3D60      //15'b011_11_01_01100000 MULI %3,%1,0.75; %3 = %1 * 0.75// 0.75y1
1B00      //15'b001_10_11_00000000 ADD  %2,%3; %2 = %2 + %3// -0.5x1 +0.75y1
28EC      //15'b010_10_00_11101100 ADDI %2,-20; %2 = %2 - 20// -0.5x1 +0.75y1 - 20 = y2 display
4090      //15'b100_00_00_10010000 HOLD 1 PC = 16
4000      //15'b100_00_00_00000000 HOLD 0 PC = 0
